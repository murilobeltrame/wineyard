version: "3"

services:
  app:
    build:
      context: app
      dockerfile: Dockerfile
      args:
        - ROOT_CONFIG_URL=//localhost:9000/wineyard-root-config.js
        - SCAFFOLD_MFE_URL=//localhost:9001/wineyard-app-scaffold.js
        - COUNTRIES_MFE_URL=//localhost:9002/wineyard-countries.js
        - GRAPES_MFE_URL=//localhost:9003/wineyard-grapes.js
        - WINES_MFE_URL=//localhost:9004/wineyard-wines.js
    ports:
      - 9000:80
  app-scaffold:
    build:
      context: app-scaffold
      dockerfile: Dockerfile
    ports:
      - 9001:80
  countries:
    build:
      context: countries/frontend
      dockerfile: Dockerfile
      args:
        - BACKEND_URL=http://countries-api
    ports:
      - 9002:80
  grapes:
    build:
      context: grapes/frontend
      dockerfile: Dockerfile
      args:
        - BACKEND_URL=http://grapes-api
    ports:
      - 9003:80
  wines:
    build:
      context: wines/frontend
      dockerfile: Dockerfile
      args:
        - BACKEND_URL=http://wines-api
    ports:
      - 9004:80
  countries-api:
    build:
      context: countries/backend/Countries.Api
      dockerfile: Dockerfile
    depends_on:
      mssql:
        condition: service_healthy
    environment:
      - ASPNETCORE_ConnectionStrings:CountriesDb=Server=mssql;Database=Countries;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True;
    ports:
      - "8082:80"
  grapes-api:
    build:
      context: grapes/backend/Grapes.Api
      dockerfile: Dockerfile
    depends_on:
      mssql:
        condition: service_healthy
    environment:
      - ASPNETCORE_ConnectionStrings:GrapesDb=Server=mssql;Database=Grapes;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True;
    ports:
      - "8083:80"
  wines-api:
    build:
      context: wines/backend/Wines.Api
      dockerfile: Dockerfile
    depends_on:
      mssql:
        condition: service_healthy
    environment:
      - ASPNETCORE_ConnectionStrings:WinesDb=Server=mssql;Database=Wines;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True;
    ports:
      - "8084:80"
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    healthcheck:
      test:
        [
          "CMD",
          "/opt/mssql-tools/bin/sqlcmd",
          "-Usa",
          "-PYourStrong@Passw0rd",
          "-Q",
          "select 1",
        ]
      interval: 1s
      retries: 30
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
    ports:
      - "14333:1433"
